{"ast":null,"code":"import nacl from '@toruslabs/tweetnacl-js';\nconst l = nacl.lowlevel;\n\nfunction getED25519Key(privateKey) {\n  let privKey;\n\n  if (typeof privateKey === \"string\") {\n    privKey = Buffer.from(privateKey, \"hex\");\n  } else {\n    privKey = privateKey;\n  } // Implementation copied from tweetnacl\n\n\n  const d = new Uint8Array(64);\n  const p = [l.gf(), l.gf(), l.gf(), l.gf()];\n  const sk = new Uint8Array([...new Uint8Array(privKey), ...new Uint8Array(32)]);\n  const pk = new Uint8Array(32);\n  l.crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  l.scalarbase(p, d);\n  l.pack(pk, p);\n\n  for (let i = 0; i < 32; i += 1) sk[i + 32] = pk[i];\n\n  return {\n    sk: Buffer.from(sk),\n    pk: Buffer.from(pk)\n  };\n}\n\nexport { getED25519Key };","map":{"version":3,"sources":["../src/utils.ts"],"names":["l","nacl","privKey","Buffer","d","p","sk","pk","i"],"mappings":";AAQA,MAAMA,CAAC,GAAIC,IAAY,CAAvB,QAAA;;AAEM,SAAA,aAAA,CAAA,UAAA,EAAmD;EAIvD,IAAA,OAAA;;EACA,IAAI,OAAA,UAAA,KAAJ,QAAA,EAAoC;IAClCC,OAAO,GAAGC,MAAM,CAANA,IAAAA,CAAAA,UAAAA,EAAVD,KAAUC,CAAVD;EADF,CAAA,MAEO;IACLA,OAAO,GAAPA,UAAAA;EARqD,CAAA,CAAA;;;EAYvD,MAAME,CAAC,GAAG,IAAA,UAAA,CAAV,EAAU,CAAV;EACA,MAAMC,CAAC,GAAG,CAACL,CAAC,CAAF,EAACA,EAAD,EAASA,CAAC,CAAV,EAASA,EAAT,EAAiBA,CAAC,CAAlB,EAAiBA,EAAjB,EAAyBA,CAAC,CAApC,EAAmCA,EAAzB,CAAV;EACA,MAAMM,EAAE,GAAG,IAAA,UAAA,CAAe,CAAC,GAAG,IAAA,UAAA,CAAJ,OAAI,CAAJ,EAA6B,GAAG,IAAA,UAAA,CAA1D,EAA0D,CAAhC,CAAf,CAAX;EACA,MAAMC,EAAE,GAAG,IAAA,UAAA,CAAX,EAAW,CAAX;EACAP,CAAC,CAADA,WAAAA,CAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAAA;EAEAI,CAAC,CAADA,CAAC,CAADA,IAAAA,GAAAA;EAEAA,CAAC,CAADA,EAAC,CAADA,IAAAA,GAAAA;EAEAA,CAAC,CAADA,EAAC,CAADA,IAAAA,EAAAA;EACAJ,CAAC,CAADA,UAAAA,CAAAA,CAAAA,EAAAA,CAAAA;EACAA,CAAC,CAADA,IAAAA,CAAAA,EAAAA,EAAAA,CAAAA;;EACA,KAAK,IAAIQ,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,EAAA,EAAwBA,CAAC,IAAzB,CAAA,EAAgCF,EAAE,CAACE,CAAC,GAAJF,EAAE,CAAFA,GAAaC,EAAE,CAAfD,CAAe,CAAfA;;EAEhC,OAAO;IAAEA,EAAE,EAAEH,MAAM,CAANA,IAAAA,CAAN,EAAMA,CAAN;IAAuBI,EAAE,EAAEJ,MAAM,CAANA,IAAAA,CAAAA,EAAAA;EAA3B,CAAP;AACD","sourcesContent":["import nacl from '@toruslabs/tweetnacl-js';\n\nconst l = nacl.lowlevel;\nfunction getED25519Key(privateKey) {\n  let privKey;\n\n  if (typeof privateKey === \"string\") {\n    privKey = Buffer.from(privateKey, \"hex\");\n  } else {\n    privKey = privateKey;\n  } // Implementation copied from tweetnacl\n\n\n  const d = new Uint8Array(64);\n  const p = [l.gf(), l.gf(), l.gf(), l.gf()];\n  const sk = new Uint8Array([...new Uint8Array(privKey), ...new Uint8Array(32)]);\n  const pk = new Uint8Array(32);\n  l.crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n  l.scalarbase(p, d);\n  l.pack(pk, p);\n\n  for (let i = 0; i < 32; i += 1) sk[i + 32] = pk[i];\n\n  return {\n    sk: Buffer.from(sk),\n    pk: Buffer.from(pk)\n  };\n}\n\nexport { getED25519Key };\n//# sourceMappingURL=openloginEd25519.esm.js.map\n"]},"metadata":{},"sourceType":"module"}